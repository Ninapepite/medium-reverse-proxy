version: '3.7'

services:
  # MySQL Service
  mysql:
    image: mysql:latest # Utilise l'image MySQL version 8
    container_name: mysql-server
    volumes:
      - ./mysql_data:/var/lib/mysql # Persiste les données de MySQL dans un volume nommé
    environment:
      MYSQL_ROOT_PASSWORD: rootpassroot # Définit le mot de passe root (à changer pour un mot de passe sécurisé)
      MYSQL_DATABASE: wordpress # Crée une base de données WordPress automatiquement
      MYSQL_USER: wordpressuser # Définit l'utilisateur de la base de données
      MYSQL_PASSWORD: wordpresspass # Définit le mot de passe pour l'utilisateur de la base de données (à changer pour un mot de passe sécurisé)
    restart: always # Redémarre toujours le service en cas d'arrêt
    networks:
      - wordpress-network # Utilise le réseau wordpress-network
      - monitor-network # Utilise le réseau monitor-network

  # WordPress Service
  wordpress:
    depends_on:
      - mysql # Dépend du service MySQL pour fonctionner
    image: wordpress:latest # Utilise la dernière version de WordPress
    container_name: wordpress-server
    labels:
      # Définit les labels pour Traefik
      - "traefik.enable=true" # Active Traefik pour ce service
      - traefik.http.routers.tutopress.rule=Host(`tutopress.ninapepite.ovh`) # Définit le nom de domaine pour ce service
      - traefik.http.routers.tutopress.tls=true # Active le TLS pour ce service
      - traefik.http.routers.tutopress.tls.certresolver=myresolver # Définit le résolveur de certificats pour ce service
    environment:
      WORDPRESS_DB_HOST: mysql-server # Utilise le service MySQL pour la base de données
      WORDPRESS_DB_USER: wordpressuser # Utilisateur de la base de données
      WORDPRESS_DB_PASSWORD: wordpresspass # Mot de passe de la base de données
      WORDPRESS_DB_NAME: wordpress # Nom de la base de données
    restart: always # Redémarre toujours le service en cas d'arrêt
    networks:
      - wordpress-network # Utilise le réseau wordpress-network
      - monitor-network # Utilise le réseau monitor-network
      - frontend # Utilise le réseau frontend

  traefik:
    # Définit le service Traefik
    restart: unless-stopped # Redémarre toujours le service en cas d'arrêt
    image: traefik:v2.10.4 # Utilise l'image Traefik version 2.10.4
    command:
      # Définit les commandes pour Traefik
      - --providers.docker=true # Active le provider Docker
      - --entrypoints.web.address=:80 # Définit le port 80 pour le service web
      - --entrypoints.websecure.address=:443 # Définit le port 443 pour le service websecure
      - --log.level=INFO # (Default: error) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
      - --certificatesresolvers.myresolver.acme.email=youremail@example.com # Définit l'adresse email pour les certificats
      - --certificatesresolvers.myresolver.acme.caserver=https://acme-v02.api.letsencrypt.org/directory # Définit le serveur ACME pour les certificats
      - --certificatesresolvers.myresolver.acme.keytype=RSA4096 # Définit le type de clé pour les certificats
      - --certificatesresolvers.myresolver.acme.tlschallenge=true # Active le TLS challenge pour les certificats
      - --certificatesresolvers.myresolver.acme.httpchallenge=true # Active le HTTP challenge pour les certificats
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web # Définit le port 80 pour le HTTP challenge
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json # Définit le chemin pour le stockage des certificats
    ports:
      - "80:80" # Expose le port 80
      - "443:443" # Expose le port 443
    volumes:
      - "./letsencrypt:/letsencrypt" # Persiste les données des certificats dans un volume persistant
      - /var/run/docker.sock:/var/run/docker.sock:ro # Montre le socket Docker
    networks:
      # Définit les réseaux pour Traefik
      - frontend # Utilise le réseau frontend
      # Uptime Kuma Service

      # Jenkins Service
  jenkins:
    image: jenkins/jenkins:lts # Utilise l'image Jenkins Long-Term Support (LTS)
    container_name: jenkins-server
    user: root
    labels:
      # Définit les labels pour Traefik
      - "traefik.enable=true" # Active Traefik pour ce service
      - traefik.http.routers.jenkins.rule=Host(`jenkins.ninapepite.ovh`) # Définit le nom de domaine pour ce service
      - traefik.http.routers.jenkins.tls=true # Active le TLS pour ce service
      - traefik.http.routers.jenkins.tls.certresolver=myresolver # Définit le résolveur de certificats pour ce service
    volumes:
      - ./jenkins_data:/var/jenkins_home:rw # Persiste les données de Jenkins dans un volume nommé
    restart: always # Redémarre toujours le service en cas d'arrêt
    networks:
      - jenkins-network # Utilise le réseau jenkins-network
      - monitor-network # Utilise le réseau monitor-network
      - frontend # Utilise le réseau frontend

  uptimekuma:
    image: louislam/uptime-kuma:1 # Utilise l'image Uptime Kuma
    container_name: uptimekuma-server
    labels:
      # Définit les labels pour Traefik
      - "traefik.enable=true" # Active Traefik pour ce service
      - traefik.http.routers.uptime.rule=Host(`uptime.ninapepite.ovh`) # Définit le nom de domaine pour ce service
      - traefik.http.routers.uptime.tls=true # Active le TLS pour ce service
      - traefik.http.routers.uptime.tls.certresolver=myresolver # Définit le résolveur de certificats pour ce service
    volumes:
      - ./uptimekuma_data:/app/data # Persiste les données de Uptime Kuma dans un volume nommé
    restart: always # Redémarre toujours le service en cas d'arrêt
    networks:
      - uptimekuma-network # Utilise le réseau uptimekuma-network
      - monitor-network # Utilise le réseau monitor-network
      - frontend # Utilise le réseau frontend

networks:
  # Réseau pour WordPress et MySQL
  wordpress-network:
    driver: bridge
  # Réseau pour Jenkins
  jenkins-network:
    driver: bridge
  # Réseau pour Uptime Kuma
  uptimekuma-network:
    driver: bridge
  # Réseau pour les services de monitoring
  monitor-network:
    driver: bridge
  # Réseau pour le reverse proxy
  frontend:
    driver: bridge
